#! /bin/sh -e

if [ $# -eq 3 -a "$2" = '-d' ]; then
    pdir="-d $3"
elif [ $# -ne 1 ]; then
    echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
    exit 1
fi
case "$1" in
    -patch) patch $pdir -f --no-backup-if-mismatch -p0 < $0;;
    -unpatch) patch $pdir -f --no-backup-if-mismatch -R -p0 < $0;;
    *)
        echo >&2 "`basename $0`: script expects -patch|-unpatch as argument"
        exit 1
esac
exit 0

			     BASH PATCH REPORT
			     =================

Bash-Release: 3.2
Patch-ID: bash32-042

Bug-Reported-by:	Archimerged Ark Submedes <archimerged@gmail.com>
Bug-Reference-ID:	<5ba4bef00804182116g65ff71e0qdffcf672f205e708@mail.gmail.com>
Bug-Reference-URL:	http://lists.gnu.org/archive/html/bug-bash/2008-04/msg00041.html

Bug-Description:

An operator precedence error prevented the bash arithmetic evaluator from
parsing conditional commands correctly.

Patch:

*** ../bash-3.2-patched/expr.c	2007-12-13 22:30:43.000000000 -0500
--- expr.c	2008-08-17 13:09:59.000000000 -0400
***************
*** 521,525 ****
  	  noeval++;
   	}
!       val2 = explor ();
        if (set_noeval)
  	noeval--;
--- 521,526 ----
  	  noeval++;
   	}
! 
!       val2 = expcond ();
        if (set_noeval)
  	noeval--;
*** ../bash-3.2/patchlevel.h	Thu Apr 13 08:31:04 2006
--- patchlevel.h	Mon Oct 16 14:22:54 2006
***************
*** 26,30 ****
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 41
  
  #endif /* _PATCHLEVEL_H_ */
--- 26,30 ----
     looks for to find the patch level (for the sccs version string). */
  
! #define PATCHLEVEL 42
  
  #endif /* _PATCHLEVEL_H_ */
